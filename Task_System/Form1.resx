<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AABaeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9beKH/W3ih/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9beKH/Vnec/ztvgP9Fcor/Wnyg/1p6oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/W3ih/1B1lf8kaWj/CWFL/w5jUf8ziHn/VaSe/1qAof9ad6D/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1t4of9Kc5D/G2Ze/yVpaP8baF7/JYxr/xl8Xv8nj27/UrCc/1qH
        of9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/SnOQ/xhlW/8ua3L/VJSc/yF+Zv84poH/S8CW/xx+
        Yf8ljGv/Ured/1mIof9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/W3ih/1F1lv8bZl7/Lmty/1eQn/9VxaH/IIVm/zek
        gP9X0aX/S8GX/xt9X/8rlXL/Vbqg/1qEoP9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9Yd57/KGps/yRoZ/9Wg53/Vr+i/1TO
        of8ghGb/N6SA/1bQpP9Wz6P/RrqS/xV1Wf87q4T/WLGi/1p7oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/W3ih/0Jxh/8XZVr/TXWT/1ir
        ov9Vz6L/VM2h/yCEZf83pID/V9Ck/1XOov9Wz6P/NqN//xl6Xf9Ow5r/WZih/1p3oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9Yd57/Imhl/zJs
        dv9aiqH/Vcei/1bQo/9Bsov/DmxS/x2AYv9OxJr/Vs+j/1XOov9RyJ3/G31g/zakf/9Xu6P/Wn2g/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/W3ih/0t0
        kP8XZVr/TXOS/1ijov9W0KP/QbKL/xV1Wf8MaU//DmxR/yCFZv9OxJn/Vs+j/1bQo/80n3z/H4Nk/1PI
        oP9ZkKH/Wneg/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9beKH/O29//yBnY/9Yep7/V7ii/0O2jf8VdVn/M557/x+EZf8wm3j/I4lp/yCEZv9Pxpv/VtCj/0a5
        kf8Xd1v/S8KX/1ijov9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1t4of8vbHP/K2pu/1qAof9WwqL/QrWN/zimgf9TzKD/IIVm/zelgP9Qx5z/Mp57/07F
        mv9Wz6P/TsWa/xh5XP9Dt47/WLCi/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/W3ih/ypqbv8wa3T/W4Oi/1bEov9Vz6L/Vs+j/1TNof8ghWb/N6SA/1fQ
        pP9Wz6P/Vc6i/1XOov9RyJ3/Gnxf/z+xif9YtaP/Wnmg/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/LGtw/y5rcv9bgqH/VsOi/1XPov9Vz6P/Ucme/xt9
        X/8wm3j/VtCj/1XOov9VzqL/Vc6i/1DHnP8Ze17/QbSL/1izo/9aeaD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1t4of80bXj/Jmlp/1p9oP9WvKL/VdCj/1LK
        n/8qk3L/CGJK/w5sUv89rIf/Vs+j/1XOov9Wz6P/S8GX/xd4XP9IvZP/WKqi/1p3oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/W3ih/0Fxhv8bZl7/VXeb/1ev
        ov9Ry57/KpJx/xl6Xf8Wd1v/HYBi/xZ2Wv88q4b/Vc6i/1bQo/9AsYv/Gnxf/1DHnP9Ym6H/Wneg/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/UHWW/xhl
        Wv9IcY3/Wpuj/zqog/8bfWD/R7uT/yGGZ/83pID/OaeC/xp8X/9LwJf/VtCk/y2Wdf8oj27/Vsei/1mI
        oP9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeJ//Jmlq/y5rcv9ahKH/T7qb/03Dmf9VzqL/IIRm/zekgP9Wz6P/Sb6V/1PMoP9Pxpz/Gnxf/z+x
        if9YtaP/Wnqg/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1t4of9DcYj/F2Va/1B1lf9YqaL/VdCj/1TNof8ghGb/N6R//1bQpP9Wz6P/VtCj/zim
        gf8egWP/Usee/1mVof9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1d3nf8iaGX/L2tz/1mHof9WxKL/VM2h/yCEZv83pH//VtCk/1XP
        o/9PxZv/G35g/zurhf9Yt6P/Wnyg/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/W3ih/0Zyi/8VZFj/SHKN/1mgov9UzKH/IIRm/zek
        f/9W0KT/Vc+i/y+Zd/8iiGj/U8Wf/1mOof9ad6D/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/y9sc/8eZmH/VHya/1a0
        of8ghWb/N6R//1fRpf9Bsov/GHld/0e6kv9YpaL/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/VHaa/x9n
        Yv8ram//V4ee/yF5Zv83poD/TMKY/xp8X/83poD/V7Wi/1p+oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9beKH/THSR/xhlW/80bXj/IWll/zCceP8ih2j/K5Vz/1W7oP9ZhaD/Wneg/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9beKH/SHON/xllXP8NYk//D2tS/yaLbP9Sup3/WYqh/1p3oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/R3OM/xVkWP8jaGf/Uo+a/1qLof9ad6D/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/T3WU/1R2mv9bd6H/Wneg/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9beKH/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4oP9aeKD/Wnig/1p4
        oP9aeKD/Wnig/1p4oP9aeKD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>